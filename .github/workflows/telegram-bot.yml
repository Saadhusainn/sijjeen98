name: Telegram File to GitHub

on:
  repository_dispatch:
    types: [telegram-pdf]

jobs:
  process-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Process File
        run: |
          # Configure git
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@users.noreply.github.com"
          
          # Pull latest changes to avoid conflicts
          git pull --rebase --quiet
          
          IS_ZIP="${{ github.event.client_payload.is_zip }}"
          FOLDER_NAME="${{ github.event.client_payload.folder_name }}"
          
          if [ "$IS_ZIP" = "true" ]; then
            echo "=== PROCESSING ZIP FILE ==="
            echo "ZIP URL: ${{ github.event.client_payload.pdf_url }}"
            echo "Folder name: $FOLDER_NAME"
            
            # Create folder for extraction
            mkdir -p "$FOLDER_NAME"
            
            # Download ZIP file with retry and proper error handling
            ZIP_FILE="temp_download.zip"
            echo "Downloading ZIP file..."
            if curl -L --fail --progress-bar "${{ github.event.client_payload.pdf_url }}" -o "$ZIP_FILE"; then
              echo "‚úì ZIP downloaded successfully"
              ZIP_SIZE=$(ls -lh "$ZIP_FILE" | cut -d ' ' -f 5)
              echo "File size: $ZIP_SIZE"
              
              # Extract ZIP file
              echo "Extracting ZIP file..."
              if unzip -q "$ZIP_FILE" -d "$FOLDER_NAME/"; then
                FILE_COUNT=$(find "$FOLDER_NAME" -type f | wc -l)
                echo "‚úì Extracted $FILE_COUNT files to $FOLDER_NAME/"
                
                # Clean up ZIP file
                rm -f "$ZIP_FILE"
                
                # Add, commit and push
                git add .
                git commit -m "Add extracted files: $FOLDER_NAME ($FILE_COUNT files)"
                git pull --rebase --quiet
                git push --quiet
                
                echo "‚úì ZIP extraction completed successfully"
              else
                echo "‚úó Failed to extract ZIP file"
                exit 1
              fi
            else
              echo "‚úó Failed to download ZIP file"
              exit 1
            fi
          else
            echo "=== PROCESSING PDF FILE ==="
            mkdir -p pdfs
            
            CLEAN_FILENAME="${{ github.event.client_payload.file_name }}"
            PDF_FILENAME="pdfs/${CLEAN_FILENAME}"
            
            echo "PDF URL: ${{ github.event.client_payload.pdf_url }}"
            echo "Saving as: $PDF_FILENAME"
            
            # Download PDF with retry and proper error handling
            echo "Downloading PDF file..."
            if curl -L --fail --progress-bar "${{ github.event.client_payload.pdf_url }}" -o "$PDF_FILENAME"; then
              echo "‚úì PDF downloaded successfully"
              PDF_SIZE=$(ls -lh "$PDF_FILENAME" | cut -d ' ' -f 5)
              echo "File size: $PDF_SIZE"
              
              # Verify file is not empty and is a valid PDF
              if [ -s "$PDF_FILENAME" ]; then
                echo "‚úì File verification passed"
                
                git add .
                git commit -m "Add PDF: $CLEAN_FILENAME"
                git pull --rebase --quiet
                git push --quiet
                
                echo "‚úì PDF upload completed successfully"
              else
                echo "‚úó Downloaded file is empty or corrupted"
                exit 1
              fi
            else
              echo "‚úó Failed to download PDF file"
              exit 1
            fi
          fi

      - name: Send completion notification
        if: success()
        run: |
          CHAT_ID="${{ github.event.client_payload.chat_id }}"
          FILENAME="${{ github.event.client_payload.file_name }}"
          REPO_NAME="${{ github.event.client_payload.repo_name }}"
          REPO_OWNER="${{ github.event.client_payload.repo_owner }}"
          IS_ZIP="${{ github.event.client_payload.is_zip }}"
          FOLDER_NAME="${{ github.event.client_payload.folder_name }}"
          
          if [ -n "$CHAT_ID" ]; then
            if [ "$IS_ZIP" = "true" ]; then
              MESSAGE="‚úÖ ZIP Extraction Complete%0A%0Aüì¶ ZIP File: $FILENAME%0AüìÅ Folder: $FOLDER_NAME%0Aüè∑Ô∏è Repository: $REPO_NAME%0A%0Aüîó View: https://github.com/$REPO_OWNER/$REPO_NAME/tree/main/$FOLDER_NAME"
            else
              MESSAGE="‚úÖ Upload Complete%0A%0AüìÑ File: $FILENAME%0Aüè∑Ô∏è Repository: $REPO_NAME%0A%0Aüîó View: https://github.com/$REPO_OWNER/$REPO_NAME/tree/main/pdfs"
            fi
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=$CHAT_ID" \
              -d "text=$MESSAGE"
            echo "‚úì Notification sent successfully"
          fi
