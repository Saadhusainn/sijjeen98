name: Telegram File to GitHub

on:
  repository_dispatch:
    types: [telegram-pdf]

jobs:
  process-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Process File
        run: |
          # Configure git
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@users.noreply.github.com"
          
          # Pull latest changes
          git pull --rebase
          
          IS_ZIP="${{ github.event.client_payload.is_zip }}"
          FOLDER_NAME="${{ github.event.client_payload.folder_name }}"
          
          if [ "$IS_ZIP" = "true" ]; then
            echo "Processing ZIP file..."
            echo "ZIP URL: ${{ github.event.client_payload.pdf_url }}"
            echo "Folder name: $FOLDER_NAME"
            
            # Create folder for extraction
            mkdir -p "$FOLDER_NAME"
            
            # Download ZIP file
            ZIP_FILE="temp_download.zip"
            curl -L --progress-bar "${{ github.event.client_payload.pdf_url }}" -o "$ZIP_FILE"
            
            if [ -f "$ZIP_FILE" ]; then
              echo "ZIP downloaded successfully"
              echo "File size: $(ls -lh "$ZIP_FILE" | cut -d ' ' -f 5)"
              
              # Extract ZIP file
              unzip -q "$ZIP_FILE" -d "$FOLDER_NAME/"
              
              # Count extracted files
              FILE_COUNT=$(find "$FOLDER_NAME" -type f | wc -l)
              echo "Extracted $FILE_COUNT files to $FOLDER_NAME/"
              
              # Clean up ZIP file
              rm -f "$ZIP_FILE"
              
              # Add, commit and push
              git add .
              git commit -m "Add extracted files: $FOLDER_NAME ($FILE_COUNT files)"
              git pull --rebase
              git push
              
              echo "ZIP extraction completed successfully"
            else
              echo "Failed to download ZIP file"
              exit 1
            fi
          else
            echo "Processing PDF file..."
            mkdir -p pdfs
            
            CLEAN_FILENAME="${{ github.event.client_payload.file_name }}"
            PDF_FILENAME="pdfs/${CLEAN_FILENAME}"
            
            echo "Downloading from: ${{ github.event.client_payload.pdf_url }}"
            echo "Saving as: $PDF_FILENAME"
            
            # Download PDF
            curl -L --progress-bar "${{ github.event.client_payload.pdf_url }}" -o "$PDF_FILENAME"
            
            if [ -f "$PDF_FILENAME" ]; then
              echo "PDF downloaded successfully"
              echo "File size: $(ls -lh "$PDF_FILENAME" | cut -d ' ' -f 5)"
              
              git add .
              git commit -m "Add PDF: $CLEAN_FILENAME"
              git pull --rebase
              git push
              
              echo "PDF upload completed successfully"
            else
              echo "Failed to download PDF"
              exit 1
            fi
          fi

      - name: Send completion notification
        run: |
          CHAT_ID="${{ github.event.client_payload.chat_id }}"
          FILENAME="${{ github.event.client_payload.file_name }}"
          REPO_NAME="${{ github.event.client_payload.repo_name }}"
          REPO_OWNER="${{ github.event.client_payload.repo_owner }}"
          IS_ZIP="${{ github.event.client_payload.is_zip }}"
          FOLDER_NAME="${{ github.event.client_payload.folder_name }}"
          
          if [ -n "$CHAT_ID" ]; then
            if [ "$IS_ZIP" = "true" ]; then
              MESSAGE="ZIP Extraction Complete%0A%0A• ZIP File: $FILENAME%0A• Folder: $FOLDER_NAME%0A• Repository: $REPO_NAME%0A• Status: All files extracted%0A%0AView: https://github.com/$REPO_OWNER/$REPO_NAME/tree/main/$FOLDER_NAME"
            else
              MESSAGE="Upload Complete%0A%0A• File: $FILENAME%0A• Repository: $REPO_NAME%0A• Status: Successfully uploaded%0A%0AView: https://github.com/$REPO_OWNER/$REPO_NAME/tree/main/pdfs"
            fi
            
            crl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=$CHAT_ID" \
              -d "text=$MESSAGE"
          fi
